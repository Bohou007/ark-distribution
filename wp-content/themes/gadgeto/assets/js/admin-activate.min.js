"use strict";!function(o){o(function(){function r(){var t=new FormData;t.append("action","thebase_dismiss_notice"),t.append("security",wpStarterInstall.ajax_nonce),o.ajax({url:wpStarterInstall.ajax_url,method:"POST",data:t,contentType:!1,processData:!1})}o("#thebase-notice-starter-templates .notice-dismiss").on("click",function(t){r()}),o("#thebase-notice-starter-templates .thebase-install-starter-btn").on("click",function(t){var a,e=o(t.target);function s(){o.ajax({method:"POST",url:wpStarterInstall.ajax_url,data:a,contentType:!1,processData:!1,beforeSend:function(){n(e.data("installing-label"))},success:function(t){var a;t.success?(a=e.data("installed-label"),e.removeClass("updating-message tb-not-installed").addClass("installed").text(a),l(e.data("activated-label")),r(),location.replace(e.data("redirect-url"))):(console.log(t),l(t.data))},error:function(t,a,e){console.log(t.responseText),l("Error")}})}function n(t){e.addClass("updating-message").removeClass("button-disabled tb-not-installed installed").text(t)}function l(t){e.removeClass("updating-message tb-not-installed installed").addClass("button-disabled").text(t)}t.preventDefault(),e.hasClass("updating-message")||e.hasClass("button-disabled")||((a=new FormData).append("action","thebase_install_starter"),a.append("security",wpStarterInstall.ajax_nonce),a.append("status",wpStarterInstall.status),"install"===wpStarterInstall.status?s():"activate"===wpStarterInstall.status&&o.ajax({url:wpStarterInstall.ajax_url,method:"POST",data:a,contentType:!1,processData:!1,beforeSend:function(){n(e.data("activating-label"))},success:function(t){t.success?(l(e.data("activated-label")),r(),location.replace(e.data("redirect-url"))):(console.log(t),l(t.data))},error:function(t,a,e){console.log(t.responseText),l("Error")}}))})})}(jQuery,(window,document));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,