"use strict";!function(r){wp.textWidgets.TextWidgetControl=Backbone.View.extend({events:{},initialize:function(t){var n=this;if(!t.el)throw new Error("Missing options.el");if(!t.syncContainer)throw new Error("Missing options.syncContainer");Backbone.View.prototype.initialize.call(n,t),n.syncContainer=t.syncContainer,n.$el.addClass("text-widget-fields"),n.$el.html(wp.template("widget-text-control-fields")),n.customHtmlWidgetPointer=n.$el.find(".wp-pointer.custom-html-widget-pointer"),n.customHtmlWidgetPointer.length&&(n.customHtmlWidgetPointer.find(".close").on("click",function(t){t.preventDefault(),n.customHtmlWidgetPointer.hide(),r("#"+n.fields.text.attr("id")+"-html").focus(),n.dismissPointers(["text_widget_custom_html"])}),n.customHtmlWidgetPointer.find(".add-widget").on("click",function(t){t.preventDefault(),n.customHtmlWidgetPointer.hide(),n.openAvailableWidgetsPanel()})),n.pasteHtmlPointer=n.$el.find(".wp-pointer.paste-html-pointer"),n.pasteHtmlPointer.length&&n.pasteHtmlPointer.find(".close").on("click",function(t){t.preventDefault(),n.pasteHtmlPointer.hide(),n.editor.focus(),n.dismissPointers(["text_widget_custom_html","text_widget_paste_html"])}),n.fields={title:n.$el.find(".title"),text:n.$el.find(".text")},_.each(n.fields,function(e,i){e.on("input change",function(){var t=n.syncContainer.find(".sync-input."+i);t.val()!==e.val()&&(t.val(e.val()),t.trigger("change"))}),e.val(n.syncContainer.find(".sync-input."+i).val())})},dismissPointers:function(t){_.each(t,function(t){wp.ajax.post("dismiss-wp-pointer",{pointer:t}),wp.textWidgets.dismissedPointers.push(t)})},openAvailableWidgetsPanel:function(){var e;wp.customize.section.each(function(t){t.extended(wp.customize.Widgets.SidebarSection)&&t.expanded()&&(e=wp.customize.control("sidebars_widgets["+t.params.sidebarId+"]"))}),e&&setTimeout(function(){wp.customize.Widgets.availableWidgetsPanel.open(e),wp.customize.Widgets.availableWidgetsPanel.$search.val("HTML").trigger("keyup")})},updateFields:function(){var t,e=this;e.fields.title.is(document.activeElement)||(t=e.syncContainer.find(".sync-input.title"),e.fields.title.val(t.val())),t=e.syncContainer.find(".sync-input.text"),e.fields.text.is(":visible")?e.fields.text.is(document.activeElement)||e.fields.text.val(t.val()):e.editor&&!e.editorFocused&&t.val()!==e.fields.text.val()&&e.editor.setContent(wp.oldEditor.autop(t.val()))},initializeEditor:function(){var o,t,s,e,d=this,c=1e3,l=!1,a=!1;t=d.fields.text,o=t.attr("id"),e=t.val(),s=function(){d.editor.isDirty()&&(wp.customize&&wp.customize.state&&(wp.customize.state("processing").set(wp.customize.state("processing").get()+1),_.delay(function(){wp.customize.state("processing").set(wp.customize.state("processing").get()-1)},300)),d.editor.isHidden()||d.editor.save()),a&&e!==t.val()&&(t.trigger("change"),a=!1,e=t.val())},d.syncContainer.closest(".widget").find("[name=savewidget]:first").on("click",function(){s()}),function t(){var e,i,n;if(document.getElementById(o))if(void 0===window.tinymce)wp.oldEditor.initialize(o,{quicktags:!0,mediaButtons:!0});else{if(tinymce.get(o)&&(l=tinymce.get(o).isHidden(),wp.oldEditor.remove(o)),r(document).one("wp-before-tinymce-init.text-widget-init",function(t,e){e.plugins&&!/\bwpview\b/.test(e.plugins)&&(e.plugins+=",wpview")}),wp.oldEditor.initialize(o,{tinymce:{wpautop:!0},quicktags:!0,mediaButtons:!0}),n=function(t){t.show(),t.find(".close").focus(),wp.a11y.speak(t.find("h3, p").map(function(){return r(this).text()}).get().join("\n\n"))},!(e=window.tinymce.get(o)))throw new Error("Failed to initialize editor");i=function(){r(e.getWin()).on("unload",function(){_.defer(t)}),l&&switchEditors.go(o,"html"),r("#"+o+"-html").on("click",function(){d.pasteHtmlPointer.hide(),-1===wp.textWidgets.dismissedPointers.indexOf("text_widget_custom_html")&&n(d.customHtmlWidgetPointer)}),r("#"+o+"-tmce").on("click",function(){d.customHtmlWidgetPointer.hide()}),e.on("pastepreprocess",function(t){t=t.content,-1===wp.textWidgets.dismissedPointers.indexOf("text_widget_paste_html")&&t&&/&lt;\w+.*?&gt;/.test(t)&&_.delay(function(){n(d.pasteHtmlPointer)},250)})},e.initialized?i():e.on("init",i),d.editorFocused=!1,e.on("focus",function(){d.editorFocused=!0}),e.on("paste",function(){e.setDirty(!0),s()}),e.on("NodeChange",function(){a=!0}),e.on("NodeChange",_.debounce(s,c)),e.on("blur hide",function(){d.editorFocused=!1,s()}),d.editor=e}}()}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,