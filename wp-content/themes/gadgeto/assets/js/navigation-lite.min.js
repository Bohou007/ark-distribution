"use strict";window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){var n,o=this.length;for(t=t||window,n=0;n<o;n++)e.call(t,this[n],n,this)}),window.thebase={initOutlineToggle:function(){document.body.addEventListener("keydown",function(){document.body.classList.remove("hide-focus-outline")}),document.body.addEventListener("mousedown",function(){document.body.classList.add("hide-focus-outline")})},getOffset:function(e){return e instanceof HTMLElement?{top:(e=e.getBoundingClientRect()).top+window.pageYOffset,left:e.left+window.pageXOffset}:{top:null,left:null}},findParents:function(e,n){var o=[];return function e(t){t=t.parentNode;t instanceof HTMLElement&&(t.matches(n)&&o.push(t),e(t))}(e),o},toggleAttribute:function(e,t,n,o){void 0===n&&(n=!0),void 0===o&&(o=!1),e.getAttribute(t)!==n?e.setAttribute(t,n):e.setAttribute(t,o)},initNavToggleSubmenus:function(){var e=document.querySelectorAll(".nav--toggle-sub");if(e.length)for(var t=0;t<e.length;t++)window.thebase.initEachNavToggleSubmenu(e[t])},initEachNavToggleSubmenu:function(e){var o=e.querySelectorAll(".menu ul");if(o.length)for(var t,a,n=0;n<o.length;n++)!function(n){(t=o[n].parentNode).querySelector(".dropdown-nav-toggle")&&((a=document.createElement("BUTTON")).setAttribute("aria-label",thebaseConfig.screenReader.expand),a.classList.add("dropdown-nav-special-toggle"),t.insertBefore(a,t.childNodes[1]),a.addEventListener("click",function(e){e.preventDefault(),window.thebase.toggleSubMenu(e.target.parentNode)}),t.addEventListener("mouseleave",function(e){window.thebase.toggleSubMenu(e.target,!1)}),t.querySelector("a").addEventListener("focus",function(e){for(var t=e.target.parentNode.parentNode.querySelectorAll("li.menu-item--toggled-on"),n=0;n<t.length;n++)window.thebase.toggleSubMenu(t[n],!1)}),o[n].addEventListener("keydown",function(e){var t="ul.toggle-show > li > a, ul.toggle-show > li > .dropdown-nav-special-toggle";9===e.keyCode&&(e.shiftKey?window.thebase.isfirstFocusableElement(o[n],document.activeElement,t)&&window.thebase.toggleSubMenu(o[n].parentNode,!1):window.thebase.islastFocusableElement(o[n],document.activeElement,t)&&window.thebase.toggleSubMenu(o[n].parentNode,!1))}),o[n].parentNode.classList.add("menu-item--has-toggle"))}(n)},toggleSubMenu:function(e,t){var n=e.querySelector(".dropdown-nav-special-toggle"),o=e.querySelector("ul"),a=e.classList.contains("menu-item--toggled-on");if(n.setAttribute("aria-expanded",(!(a=void 0!==t&&"boolean"==typeof t?!t:a)).toString()),a){e.classList.remove("menu-item--toggled-on"),o.classList.remove("toggle-show"),n.setAttribute("aria-label",thebaseConfig.screenReader.expand);for(var i=e.querySelectorAll(".menu-item--toggled-on"),r=0;r<i.length;r++)window.thebase.toggleSubMenu(i[r],!1)}else{for(var s=e.parentNode.querySelectorAll("li.menu-item--toggled-on"),d=0;d<s.length;d++)window.thebase.toggleSubMenu(s[d],!1);e.classList.add("menu-item--toggled-on"),o.classList.add("toggle-show"),n.setAttribute("aria-label",thebaseConfig.screenReader.collapse)}},isfirstFocusableElement:function(e,t,n){e=e.querySelectorAll(n);return 0<e.length&&t===e[0]},islastFocusableElement:function(e,t,n){e=e.querySelectorAll(n);return 0<e.length&&t===e[e.length-1]},toggleDrawer:function(e,n){n=void 0===n||n;var t,o,a=e,i=document.querySelector(a.dataset.toggleTarget),e=document,r=a.dataset.toggleDuration||250;window.thebase.toggleAttribute(a,"aria-expanded","true","false"),i.classList.contains("show-drawer")?(a.dataset.toggleBodyClass&&e.body.classList.remove(a.dataset.toggleBodyClass),i.classList.remove("active"),i.classList.remove("pop-animated"),setTimeout(function(){var e;i.classList.remove("show-drawer"),a.dataset.setFocus&&n&&((e=document.querySelector(a.dataset.setFocus))&&(e.focus(),e.hasAttribute("aria-expanded")&&window.thebase.toggleAttribute(e,"aria-expanded","true","false")))},r)):(i.classList.add("show-drawer"),a.dataset.toggleBodyClass&&e.body.classList.toggle(a.dataset.toggleBodyClass),setTimeout(function(){var e,t;i.classList.add("active"),a.dataset.setFocus,n&&(e=document.querySelector(a.dataset.setFocus))&&(e.hasAttribute("aria-expanded")&&window.thebase.toggleAttribute(e,"aria-expanded","true","false"),t=e.value,e.value="",e.focus(),e.value=t)},10),setTimeout(function(){i.classList.add("pop-animated")},r),i.classList.contains("popup-drawer")&&(e=i.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),t=e[0],o=e[e.length-1],document.addEventListener("keydown",function(e){"Tab"!==e.key&&9!==e.keyCode||(e.shiftKey?document.activeElement===t&&(o.focus(),e.preventDefault()):document.activeElement===o&&(t.focus(),e.preventDefault()))})))},initToggleDrawer:function(){var n=document.querySelectorAll(".drawer-toggle");if(n.length){for(var e=0;e<n.length;e++)!function(t){n[t].addEventListener("click",function(e){e.preventDefault(),window.thebase.toggleDrawer(n[t])})}(e);document.addEventListener("keyup",function(e){27===e.keyCode&&document.querySelectorAll(".popup-drawer.show-drawer.active")&&(e.preventDefault(),document.querySelectorAll(".popup-drawer.show-drawer.active").forEach(function(e){window.thebase.toggleDrawer(document.querySelector('*[data-toggle-target="'+e.dataset.drawerTargetString+'"]'))}))}),document.addEventListener("click",function(e){var e=e.target,t=document.querySelector(".show-drawer.active .drawer-overlay");e===t&&window.thebase.toggleDrawer(document.querySelector('*[data-toggle-target="'+t.dataset.drawerTargetString+'"]'))})}},initMobileToggleSub:function(){document.querySelectorAll(".has-collapse-sub-nav").forEach(function(e){e=e.querySelector(".current-menu-item");e&&window.thebase.findParents(e,"li").forEach(function(e){e=e.querySelector(".drawer-sub-toggle");e&&window.thebase.toggleDrawer(e,!0)})});var n=document.querySelectorAll(".drawer-sub-toggle");if(n.length)for(var e=0;e<n.length;e++)!function(t){n[t].addEventListener("click",function(e){e.preventDefault(),window.thebase.toggleDrawer(n[t])})}(e)},initMobileToggleAnchor:function(){var t=document.getElementById("mobile-drawer");if(t){var e=t.querySelectorAll("a");if(e.length)for(var n=0;n<e.length;n++)e[n].addEventListener("click",function(e){window.thebase.toggleDrawer(t.querySelector(".menu-toggle-close"),!1)})}},initTransHeaderPadding:function(){var t,n,e;document.body.classList.contains("no-header")||document.body.classList.contains("transparent-header")&&document.body.classList.contains("mobile-transparent-header")&&(t=document.querySelector(".entry-hero-container-inner"),n=document.querySelector("#masthead"),e=function(e){thebaseConfig.breakPoints.desktop<=window.innerWidth?document.body.classList.contains("transparent-header")?t.style.paddingTop=n.offsetHeight+"px":t.style.paddingTop=0:document.body.classList.contains("mobile-transparent-header")?t.style.paddingTop=n.offsetHeight+"px":t.style.paddingTop=0},t&&(window.addEventListener("resize",e,!1),window.addEventListener("scroll",e,!1),window.addEventListener("load",e,!1),e()))},getTopOffset:function(){var e=0;return thebaseConfig.breakPoints.desktop<=window.innerWidth?document.body.classList.contains("admin-bar")&&(e=32):e=0,Math.floor(0+e)},initStickySidebar:function(){var e,t;document.body.classList.contains("has-sticky-sidebar")&&(e=window.thebase.getTopOffset(),(t=document.querySelector("#secondary .sidebar-inner-wrap")).style.top=Math.floor(e+20)+"px",t.style.maxHeight="calc( 100vh - "+Math.floor(e+20)+"px )")},init:function(){window.thebase.initNavToggleSubmenus(),window.thebase.initToggleDrawer(),window.thebase.initMobileToggleAnchor(),window.thebase.initMobileToggleSub(),window.thebase.initOutlineToggle(),window.thebase.initStickySidebar(),window.thebase.initTransHeaderPadding()}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",window.thebase.init):window.thebase.init();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,